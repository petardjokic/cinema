<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rs.ac.bg.fon.cinema.mapper.MovieProductionCompanyMapper">

	<resultMap type="MovieProductionCompany" id="MovieProductionCompanyMap">
		<id column="id" property="id" />
		<result column="movie_id" property="movieId" />
		<association property="productionCompany">
			<id column="production_company_id" property="id" />
			<result column="production_company_name" property="name" />
		</association>
	</resultMap>

	<!-- public long count(); -->
	<select id="count" resultType="Long">
		SELECT count(*) FROM movie_production_companies
	</select>
	
	<sql id="getMovieProductionCompany">
		SELECT mpc.*, pc.name production_company_name
		FROM movie_production_companies mpc INNER JOIN production_companies pc ON mpc.production_company_id=pc.id
	</sql>

	<!-- public MovieProductionCompany getById(Long id); -->
	<select id="getById" parameterType="long" resultMap="MovieProductionCompanyMap">
		<include refid="getMovieProductionCompany"></include>
		WHERE mpc.id = #{id}
	</select>
	
	<!-- public List<MovieProductionCompany> getByMovieId(Long movieId); -->
	<select id="getByMovieId" parameterType="long" resultMap="MovieProductionCompanyMap">
		<include refid="getMovieProductionCompany"></include>
		WHERE mpc.movie_id = #{movieId}
	</select>

	<!-- public int insert(MovieProductionCompany entity); -->
	<insert id="insert" parameterType="MovieProductionCompany">
		<selectKey order="BEFORE" resultType="long" keyProperty="id">
			select sq_movie_production_companies.nextval from dual
		</selectKey>
		INSERT INTO movie_production_companies(id, movie_id, production_company_id)
						VALUES (#{id}, #{movieId}, #{productionCompany.id})
	</insert>

	<!-- public int update(MovieProductionCompany entity); -->
	<update id="update" parameterType="MovieProductionCompany">
		UPDATE movie_production_companies
		SET
		movie_id = #{movieId},
		production_company_id = #{productionCompany.id}
		WHERE
		id = #{id}
	</update>

	<!-- public int deleteById(Long id); -->
	<delete id="deleteById" parameterType="long">
		DELETE
		FROM movie_production_companies 
		WHERE
		id = #{id}
	</delete>
	
	<!-- public public int deleteById(MovieProductionCompany movieProductionCompany); -->
	<delete id="deleteMovieProductionCompany">
		DELETE
		FROM movie_production_companies 
		WHERE
		movie_id = #{movieId} AND production_company_id = #{productionCompanyId}
	</delete>

</mapper>