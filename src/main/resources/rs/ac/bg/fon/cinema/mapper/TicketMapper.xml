<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rs.ac.bg.fon.cinema.mapper.TicketMapper">

	<resultMap type="Ticket" id="TicketMap">
		<id column="id" property="id" />
		<result column="invoice_id" property="invoiceId" />
		<result column="display_id" property="displayId" />
		<result column="seat_id" property="seatId" />
		<result column="active" property="active" />
	</resultMap>

	<resultMap type="TicketDto" id="TicketDtoMap">
		<id column="ticket_id" property="ticketId" />
		<result column="display_id" property="displayId" />
		<result column="starts_at" property="startsAt" />
		<result column="active" property="active" />
		<association property="movie">
			<id column="movie_id" property="id"  />
			<result column="movie_title" property="title" />
		</association>
		<association property="hall">
			<id column="hall_id" property="id" />
			<result column="hall_name" property="name" />
		</association>
		<association property="seat">
			<result column="seat_id" property="id" />
			<result column="seat_row" property="row" />
			<result column="seat_column" property="column" />
			<association property="seatType">
				<id column="seat_type_id" property="id" />
				<result column="seat_type_name" property="name" />
			</association>
		</association>
	</resultMap>

	<!-- public long count(); -->
	<select id="count" resultType="Long">
		SELECT count(*) FROM tickets
	</select>


	<!-- public Ticket getById(Long id); -->
	<select id="getById" parameterType="long" resultMap="TicketMap">
		SELECT t.*
		FROM tickets t
		WHERE t.id = #{id}
	</select>

	<!-- public List<Ticket> getByDisplayId(Long displayId); -->
	<select id="getByDisplayId" parameterType="long"
		resultMap="TicketDtoMap">
		SELECT t.id ticket_id, t.display_id display_id, d.starts_at
		starts_at, m.id movie_id, m.title movie_title, h.id hall_id, h.name hall_name,
		hs.id
		seat_id,
		hs.seat_row seat_row, hs.seat_column seat_column, st.id
		seat_type_id,
		st.name seat_type_name
		FROM tickets t INNER JOIN displays
		d ON
		t.display_id = d.id INNER JOIN movies m ON d.movie_id = m.id
		INNER
		JOIN
		halls h ON d.hall_id = h.id INNER JOIN hall_seats hs ON
		hs.id =
		t.seat_id INNER JOIN seat_types st ON hs.seat_type_id = st.id
		WHERE
		t.display_id = #{displayId}
	</select>

	<!-- public public List<TicketDto> getByInvoiceId(Long invoiceId); -->
	<select id="getByInvoiceId" parameterType="long"
		resultMap="TicketDtoMap">
		SELECT t.id ticket_id, t.display_id display_id, d.starts_at
		starts_at, m.title movie_title, h.name hall_name,
		hs.id seat_id,
		hs.seat_row seat_row, hs.seat_column seat_column, st.id seat_type_id,
		st.name seat_type_name
		FROM tickets t INNER JOIN displays
		d ON
		t.display_id = d.id INNER JOIN movies m ON d.movie_id = m.id
		INNER JOIN
		halls h ON d.hall_id = h.id INNER JOIN hall_seats hs ON
		hs.id =
		t.seat_id INNER JOIN seat_types st ON hs.seat_type_id = st.id
		WHERE
		t.invoice_id = #{invoiceId}
	</select>

	<!-- public int insert(Ticket entity); -->
	<insert id="insert" parameterType="Ticket">
		<selectKey order="BEFORE" resultType="long" keyProperty="id">
			select sq_tickets.nextval from dual
		</selectKey>
		INSERT INTO tickets(id, invoice_id, display_id, seat_id, active)
		VALUES (#{id}, #{invoiceId} , #{displayId}, #{seatId}, #{active})
	</insert>

	<!-- public int update(Ticket entity); -->
	<update id="update" parameterType="Ticket">
		UPDATE tickets
		SET
		invoice_id =
		#{invoiceId},
		display_id = #{displayId},
		seat_id = #{seatId},
		active =
		#{active}
		WHERE
		id =
		#{id}
	</update>

	<!-- public int deleteById(Long id); -->
	<delete id="deleteById" parameterType="long">
		DELETE
		FROM tickets
		WHERE
		id
		= #{id}
	</delete>


</mapper>