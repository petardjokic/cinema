<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rs.ac.bg.fon.cinema.mapper.DisplayMapper">

	<resultMap type="Display" id="DisplayMap">
		<id column="id" property="id" />
		<result column="starts_at" property="startsAt" />
		<result column="active" property="active" />
		<association property="movie">
			<id column="movie_id" property="id" />
			<result column="movie_title" property="title" />
			<result column="movie_trailer_uri" property="trailerUri" />
			<result column="movie_description" property="description" />
			<result column="movie_duration" property="duration" />
			<result column="movie_year" property="releaseYear" />
		</association>
		<association property="hall">
			<id column="hall_id" property="id" />
			<result column="hall_name" property="name" />
		</association>
		<association property="category">
			<id column="category_id" property="id" />
			<result column="category_name" property="name" />
		</association>
	</resultMap>

	<!-- public long count(); -->
	<select id="count" resultType="Long">
		SELECT count(*) FROM displays
	</select>
	
	<sql id="getDisplay">
		SELECT d.*, 
		m.title movie_title, m.trailer_uri movie_trailer_uri, 
		m.duration movie_duration, m.release_year movie_year, m.description movie_description,
		h.id hall_id, h.name hall_name,
		dc.id category_id, dc.name category_name
		FROM displays d 
		INNER JOIN movies m ON d.movie_id = m.id 
		INNER JOIN halls h ON d.hall_id = h.id
		INNER JOIN display_categories dc ON d.category_id = dc.id
	</sql>

	<!-- public Display getById(Long id); -->
	<select id="getById" parameterType="long" resultMap="DisplayMap">
		<include refid="getDisplay"></include>
		WHERE d.id = #{id}
	</select>
	
	<!-- public List<Display> getAll(); -->
	<select id="getAll" resultMap="DisplayMap">
		<include refid="getDisplay"></include>
		ORDER BY starts_at DESC
	</select>
	
	<!-- public List<Display> search(request); -->
	<select id="search" resultMap="DisplayMap">
		<include refid="getDisplay"></include>
		<where>
			<if test="movieId != null">
				AND m.id = #{movieId}
			</if>
			<if test="movieTitle != null">
				AND lower(m.title) LIKE lower('%' || #{movieTitle} || '%')
			</if>
			<if test="dateFrom != null">
				AND d.starts_at &gt;= #{dateFrom}
			</if>
			<if test="dateTo != null">
				AND d.starts_at &lt;= #{dateTo}
			</if>
		</where>
	</select>

	<!-- public int insert(Display entity); -->
	<insert id="insert" parameterType="Display">
		<selectKey order="BEFORE" resultType="long" keyProperty="id">
			select sq_displays.nextval from dual
		</selectKey>
		INSERT INTO displays(id, movie_id, hall_id, category_id,starts_at, active)
					VALUES (#{id}, #{movie.id}, #{hall.id}, #{category.id}, #{startsAt}, #{active})
	</insert>

	<!-- public int update(Display entity); -->
	<update id="update" parameterType="Display">
		UPDATE displays
		SET
		movie_id = #{movie.id},
		hall_id = #{hall.id},
		category_id = #{category.id},
		starts_at = #{startsAt},
		active = #{active}
		WHERE
		id = #{id}
	</update>

	<!-- public int deleteById(Long id); -->
	<delete id="deleteById" parameterType="long">
		DELETE
		FROM displays 
		WHERE
		id = #{id}
	</delete>
	
	<update id="deactivateDisplay" parameterType="Long">
		UPDATE displays
		SET
		active = 0
		WHERE
		id = #{id}
	</update>


</mapper>