<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rs.ac.bg.fon.cinema.mapper.InvoiceMapper">

	<resultMap type="Invoice" id="InvoiceMap">
		<id column="id" property="id" />
		<result column="issued_at" property="issuedAt" />
		<result column="active" property="active" />
		<result column="total_price" property="totalPrice" />
	</resultMap>

	<!-- public long count(); -->
	<select id="count" resultType="Long">
		SELECT count(*) FROM invoices
	</select>

	<sql id="getInvoice">
		SELECT i.*
		FROM invoices i
	</sql>


	<!-- public Invoice getById(Long id); -->
	<select id="getById" parameterType="long" resultMap="InvoiceMap">
		<include refid="getInvoice"></include>
		WHERE i.id = #{id}
	</select>

	<!-- public List<Invoice> getAll(); -->
	<select id="getAll" resultMap="InvoiceMap">
		<include refid="getInvoice"></include>
	</select>

	<!-- public List<Invoice> search(request); -->
	<select id="search" resultMap="InvoiceMap">
		<include refid="getInvoice"></include>
		<where>
			<if test="invoiceId != null">
				i.id = #{invoiceId}
			</if>
			<if test="dateFrom != null">
				AND i.issued_at &gt;= #{dateFrom}
			</if>
			<if test="dateTo != null">
				AND i.issued_at &lt;= #{dateTo}
			</if>
		</where>
	</select>

	<!-- public int insert(Invoice entity); -->
	<insert id="insert" parameterType="Invoice">
		<selectKey order="BEFORE" resultType="long" keyProperty="id">
			select sq_invoices.nextval from dual
		</selectKey>
		INSERT INTO invoices(id, issued_at, active, total_price)
		VALUES (#{id}, current_timestamp, #{active}, #{totalPrice})
	</insert>

	<!-- public int update(Invoice entity); -->
	<update id="update" parameterType="Invoice">
		UPDATE invoices
		SET
		issued_at =
		#{issuedAt},
		active = #{active},
		total_price = #{totalPrice}
		WHERE
		id = #{id}
	</update>


	<!-- public void freezeInvoice(Long id); -->
	<update id="freezeInvoice" parameterType="Long">
		UPDATE invoices
		SET
		active = 0
		WHERE
		id = #{id}
	</update>

	<!-- public int deleteById(Long id); -->
	<delete id="deleteById" parameterType="long">
		DELETE
		FROM invoices
		WHERE
		id = #{id}
	</delete>


</mapper>