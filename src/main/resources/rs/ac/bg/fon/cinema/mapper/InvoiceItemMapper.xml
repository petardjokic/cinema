<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rs.ac.bg.fon.cinema.mapper.InvoiceItemMapper">

	<resultMap type="InvoiceItem" id="InvoiceItemMap">
		<id column="ticket_id" property="id" />
		<result column="invoice_id" property="invoiceId" />
		<result column="display_id" property="displayId" />
		<result column="active" property="active" />
		<result column="price" property="price" />
		<association property="seat">
			<id column="seat_id" property="id" />
			<result column="seat_hall_id" property="hallId" />
			<result column="seat_row" property="row" />
			<result column="seat_column" property="column" />
			<association property="type">
				<id column="seat_type_id" property="id" />
			<result column="seat_type_name" property="name" />
			</association>
		</association>
	</resultMap>

	<!-- public long count(); -->
	<select id="count" resultType="Long">
		SELECT count(*) FROM tickets
	</select>

	<sql id="getInvoiceItem">
		SELECT t.id ticket_id, t.display_id display_id, t.invoice_id invoice_id, t.active active, t.price price, 
		hs.id seat_id, hs.hall_id seat_hall_id, hs.seat_row seat_row, hs.seat_column seat_column, 
		st.id seat_type_id, st.name seat_type_name
		FROM tickets t 
		INNER JOIN hall_seats hs ON hs.id = t.seat_id 
		INNER JOIN seat_types st ON hs.seat_type_id = st.id
	</sql>

	<!-- public InvoiceItem getById(Long id); -->
	<select id="getById" parameterType="long" resultMap="InvoiceItemMap">
		<include refid="getInvoiceItem"></include>
		WHERE t.id = #{id}
	</select>
	
	
	 <select id="searchInvoiceItems" resultMap="InvoiceItemMap">
         <include refid="getInvoiceItem"></include>
         <where>
            <if test="displayId != null">
               	t.display_id = #{displayId}
            </if>
            <if test="invoiceId != null">
                AND t.invoice_id = #{invoiceId}
            </if>
            <if test="seatId != null">
               AND t.seat_id = #{invoiceId}
            </if>
            <if test="active != null">
               AND t.active = #{active}
            </if>
          </where>
    </select>

	<!-- public int insert(Ticket entity); -->
	<insert id="insert" parameterType="InvoiceItem">
		<selectKey order="BEFORE" resultType="long" keyProperty="id">
			select sq_tickets.nextval from dual
		</selectKey>
		INSERT INTO tickets(id, invoice_id, display_id, seat_id, active, price)
		VALUES (#{id}, #{invoiceId} , #{displayId}, #{seat.id}, #{active}, #{price})
	</insert>

	<!-- public int update(Ticket entity); -->
	<update id="update" parameterType="Ticket">
		UPDATE tickets
		SET 
		invoice_id = #{invoiceId},
		display_id = #{displayId},
		seat_id = #{seat.id},
		active = #{active},
		price = #{price}
		WHERE
		id = #{id}
	</update>
	
	<!-- public int update(Ticket entity); -->
	<update id="freezeByInvoiceId">
		UPDATE tickets
		SET 
		active = false
		WHERE
		invoice_id = #{invoiceId}
	</update>
	
	
	<!-- public int freezeTicketsByInvoiceId(Long invoiceId); -->
	<update id="freezeTicketsByInvoiceId" parameterType="Long">
		UPDATE tickets
		SET 
		active = 0
		WHERE
		invoice_id = #{invoiceId}
	</update>

	<!-- public int deleteById(Long id); -->
	<delete id="deleteById" parameterType="long">
		DELETE
		FROM tickets
		WHERE
		id = #{id}
	</delete>


</mapper>